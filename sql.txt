
1 To get all distinct value from a column
	select DISTINCT	from films;

2 To count number of rows in columns
	Select COUNT(*) from table;

3 To count and distinct values in table
	select count(distinct colname) from table;			#distinct is pass inside count()
	
4 To do multiple conditon
	select * from table where id=3 and name='tushar';

5 Between is used to filter out values in a specific range
	select * from table where year between(2000,1000);

6 Like in sql to find pattern
	
	select * from table where year Like 'd%'	[all name start with d]

7 AGG function
	select avg(colName) from table;		#use sum() max() in place of avg()


8 To alias, you use the AS keyword, which you've already seen earlier in this course.
	SELECT MAX(budget) AS max_budget, MAX(duration) AS max_duration FROM films;

9 ORDER BY IS used to do sorting
	select name from people order by name ; 


10 Group by operation
	select release_year,avg(duration) from films group by release_year;

11 aggregate functions can't be used in WHERE clauses. For example, the following query is invalid:
	SELECT release_year FROM films GROUP BY release_year 
		HAVING COUNT(title) > 10;


12 JOINS
	INNER JOIN and left join are same
	select a.id from table a inner join table b on a.id=b.id_val 

   USING keyword is used to not use ON in same query where same values are column name are present

13 SELF Join when you wanna compare same values by itself
	
	select year 
		CASE WHEN year < 1990 THEN 'before 1990'
		WHEN year <=1930 THEN 'between years'
		ELSE 'after year' END
		as year_group
	from tables;


14 Join are like
	LEFT contains data of left table and matching right table content
	RIGHT contains data of right table and matching left table content 
	FULL contains data of left and right table and other value as null 
	CROSS contains all possible relation of two tables.

